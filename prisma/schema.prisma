// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

enum Action {
  BE_PROMOTED
  PROMOTE
  DEMOTE
  FIRE
  GRATIFY
  WARN
}

enum HierarchyKind {
  EXECUTIVE
  MILITARY
}

enum PermissionType {
  COURSE
  FUNCTION
}

enum ActivityType {
  PROMOTION
  DEMOTION
  FIRE
  BANNING
  LICENSE
  WARNING
}

model User {
  id                  String                @id @default(uuid())
  nick                String                @unique @db.VarChar(30)
  password            String?               @db.VarChar(240)
  discord             String?               @db.VarChar(30)
  lastPromoted        DateTime              @default(now())
  createdAt           DateTime              @default(now())
  advNum              Int                   @default(0)
  isAccountActive     Boolean               @default(false)
  isAdmin             Boolean               @default(false)
  role                Roles?                @relation(fields: [roleName], references: [name])
  roleName            String?
  permissionsObtained PermissionsObtained[]
  ActivityLog         ActivityLog[]
}

model ActivityLog {
  id                String       @id @default(uuid())
  type              ActivityType
  targetId          String
  author            String
  isActive          Boolean      @default(true)
  description       String       @db.VarChar(4000)
  user              User         @relation(fields: [targetId], references: [id])
  createdAt         DateTime     @default(now())
  expiresAt         DateTime?
  newRole           String?
  oldWarningsAmount String?
}

model PermissionsObtained {
  id        String         @id @default(uuid())
  user      User           @relation(fields: [userId], references: [id])
  userId    String
  name      String
  fullName  String
  type      PermissionType
  createdAt DateTime       @default(now())

  @@unique([userId, name], name: "permissionIdentifier")
}

model PermissionsRequired {
  id            Int            @id @default(autoincrement())
  action        Action
  name          String
  type          PermissionType
  role          Roles?         @relation(fields: [roleName], references: [name])
  roleName      String?
  hierarchyKind HierarchyKind?

  @@unique([name, roleName], name: "roleSpecificIdentifier")
  @@unique([name, hierarchyKind], name: "hierachySpecificIdentifier")
}

model Roles {
  id                        Int                   @id @default(autoincrement())
  hierarchyPosition         Int
  hierarchyKind             HierarchyKind
  name                      String                @unique @db.VarChar(30)
  promotesUntilRolePosition Int
  demoteUntilRolePosition   Int
  fireUntilRolePosition     Int
  gratifyUntilRolePosition  Int
  daysToBePromoted          Int
  permissionsRequired       PermissionsRequired[]
  users                     User[]

  @@unique([hierarchyPosition, hierarchyKind], name: "roleIdentifier")
}

model GeneralRequirements {
  id Int @id
}

model Session {
  id        String   @id @default(uuid())
  code      String   @db.VarChar(10)
  expiresAt DateTime
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
